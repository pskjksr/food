import nodemailer from "nodemailer";

// ‡∏™‡∏£‡πâ‡∏≤‡∏á transporter ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
const transporter = nodemailer.createTransport({
  service: "gmail", // ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô‡πÜ
  auth: {
    user: process.env.EMAIL_USER, // ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏á
    pass: process.env.EMAIL_PASS, // ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•
  },
  tls: {
    rejectUnauthorized: false, // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SSL (‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô production)
  },
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
export async function sendResetEmail(email: string, resetToken: string) {
  const resetUrl = `${process.env.FRONTEND_URL}/resetpassword?token=${resetToken}`;

  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: email,
    subject: "Reset your password",
    html: `
      <h2>Password Reset</h2>
      <p>Click the link below to reset your password:</p>
      <a href="${resetUrl}">Reset Password</a>
    `,
  };

  try {
    // ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
    await transporter.sendMail(mailOptions);
    console.log("üì© Password reset email sent successfully!");
  } catch (error) {
    console.error("‚ùå Failed to send email:", error);
    throw error;
  }
}
